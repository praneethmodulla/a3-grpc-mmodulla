syntax = "proto3";

import "google/protobuf/timestamp.proto";

message User {
  string user_id = 1;
}

message Post {
  string post_id = 1;
  string title = 2;
  string text = 3;
  string video_url = 4;
  string image_url = 5;
  string author_id = 6;
  int32 score = 7;
  enum PostState {
    NORMAL = 0;
    LOCKED = 1;
    HIDDEN = 2;
  }
  PostState state = 8;
  google.protobuf.Timestamp publication_date = 9;
}

message Comment {
  string comment_id = 1;
  string text = 2;
  string author_id = 3;
  int32 score = 4;
  enum CommentState {
    NORMAL = 0;
    HIDDEN = 1;
  }
  CommentState state = 5;
  google.protobuf.Timestamp publication_date = 6;
}

service RedditApi {
  rpc CreatePost(Post) returns (Post);
  rpc VotePost(VotePostRequest) returns (Post);
  rpc GetPost(GetPostRequest) returns (Post);
  rpc CreateComment(Comment) returns (Comment);
  rpc VoteComment(VoteCommentRequest) returns (Comment);
  rpc GetTopComments(GetTopCommentsRequest) returns (TopCommentsResponse);
  rpc ExpandCommentBranch(ExpandCommentBranchRequest) returns (ExpandCommentBranchResponse);
}

message VotePostRequest {
  string post_id = 1;
  bool upvote = 2;
}

message GetPostRequest {
  string post_id = 1;
}

message VoteCommentRequest {
  string comment_id = 1;
  bool upvote = 2;
}

message GetTopCommentsRequest {
  string post_id = 1;
  int32 limit = 2;
}

message ExpandCommentBranchRequest {
  string comment_id = 1;
  int32 limit = 2;
}

message TopCommentsResponse {
  repeated Comment top_comments = 1;
  map<string, bool> has_replies = 2;
}

message ExpandCommentBranchResponse {
  repeated Comment expanded_comments = 1;
  repeated TopCommentsResponse replies = 2;
}
